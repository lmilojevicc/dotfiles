[
  { "key": "cmd+n", "command": "fileutils.newFileAtRoot" },

  // Toggle quotes and brackets
  { "key": "ctrl+'", "command": "editor.togglequotes" },
  { "key": "ctrl+[", "command": "bracketeer.swapBrackets" },

  // File tree actions
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "f",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "h",
    "command": "explorer.openToSide",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "v",
    "command": "runCommands",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    }
  },

  // Terminal
  {
    "key": "shift+alt+right",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && !editorTextFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && !editorTextFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && !editorTextFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && !editorTextFocus"
  },
  {
    "key": "shift+alt+x",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+alt+shift+x",
    "command": "workbench.action.terminal.killAll",
    "when": "terminalFocus"
  },

  // Switching focus between Editor, Terminal and Sidebar
  {
    "key": "alt+t",
    "command": "workbench.action.togglePanel",
    "when": "editorTextFocus || terminalFocus"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "panelFocus || terminalFocus || problemsFocus || outputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusPanel",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusSideBar",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusActivityBar",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusSideBar",
    "when": "activityBarFocus || focusedView"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus"
  },

  // Completion menu navigation
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible"
  },

  // Show completion suggestions
  {
    "key": "ctrl+enter",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },

  // Close completion window
  {
    "key": "ctrl+e",
    "command": "hideSuggestWidget",
    "when": "editorTextFocus && suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-extension.vim_ctrl+space",
    "when": "editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+backspace",
    "command": "-extension.vim_ctrl+backspace",
    "when": "editorTextFocus && vim.active && vim.use<C-BS> && !inDebugRepl && vim.mode != 'Insert'"
  },

  // Move and copy lines in Normal Mode
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "shift+alt+j",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "shift+alt+k",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
  },

  // Move and copy lines in Visual Mode
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && vim.active && (vim.mode == 'Visual' || vim.mode == 'VisualLine')"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && vim.active && (vim.mode == 'Visual' || vim.mode == 'VisualLine')"
  },
  {
    "key": "shift+alt+j",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && vim.active && (vim.mode == 'Visual' || vim.mode == 'VisualLine')"
  },
  {
    "key": "shift+alt+k",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && vim.active && (vim.mode == 'Visual' || vim.mode == 'VisualLine')"
  },
  {
    "key": "ctrl+t",
    "command": "-editor.action.transposeLetters",
    "when": "textInputFocus && !editorReadonly"
  }
]
